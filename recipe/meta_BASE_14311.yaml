{% set name = "nest-simulator" %}
{% set version = "3.3" %}
{% set build = 0 %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://github.com/nest/{{ name }}/archive/v{{ version }}.tar.gz
  sha256: 179462b966cc61f5785d2fee770bc36f86745598ace9cd97dd620622b62043ed
  patches:
    - 01-nest-simulator-v33-fix-conda.patch

build:
  number: {{ build }}
  string: py{{ py }}h{{ PKG_HASH }}_{{ build }}
  skip: true  # [win or py<38 or python_impl == 'pypy']

requirements:
  build:
    - cmake >=3.12
    - llvm-openmp  # [osx]
    - make
    - libgomp  # [linux]
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - sysroot_linux-64 2.17   # [linux64]
  host:
    - boost  >=1.69
    - cython
    - gsl >=1.11
    - libcblas
    - liblapack
    - libtool
    - ncurses
    - mpi4py
    - python
    - readline
    - scipy
    - openssh
    - statsmodels
    - zlib
  run:
    - boost
    - cython
    - gsl
    - libtool
    - matplotlib-base
    - mpi4py
    - python
    - python.app  # [osx]
    - readline
    - scipy
    - statsmodels
    - openssh

test:
  imports:
    - nest
  commands:
    - nest --help
    - sli --help

about:
  home: http://www.nest-simulator.org/
  license: GPL-2.0-or-later
  license_family: GPL
  license_file: LICENSE
  summary: |
    NEST is a simulator for spiking neural network models that focuses on the dynamics, size and structure of neural
    systems rather than on the exact morphology of individual neurons.
  description: |
    You can use NEST either as a for the interpreted programming language Python (PyNEST) or as a stand alone
    application (nest). PyNEST provides a set of commands to the Python interpreter which give you access to NEST's
    simulation kernel. With these commands, you describe and run your network simulation. You can also complement
    PyNEST with PyNN, a simulator-independent set of Python commands to formulate and run neural simulations. While
    you define your simulations in Python, the actual simulation is executed within NEST's highly optimized
    simulation kernel which is written in C++. A NEST simulation tries to follow the logic of an
    electrophysiological experiment that takes place inside a computer with the difference, that the neural system
    to be investigated must be defined by the experimenter. The neural system is defined by a possibly large number
    of neurons and their connections. In a NEST network, different neuron and synapse models can coexist. Any two
    neurons can have multiple connections with different properties. Thus, the connectivity can in general not
    be described by a weight or connectivity matrix but rather as an adjacency list. To manipulate or observe the
    network dynamics, the experimenter can define so-called devices which represent the various instruments (for
    measuring and stimulation) found in an experiment. These devices write their data either to memory or to file.
    NEST is extensible and new models for neurons, synapses, and devices can be added. To get started with NEST,
    please see the documentation page <https://nest-simulator.org/documentation/>.
  doc_url: https://nest-simulator.readthedocs.io/en/latest/
  dev_url: https://github.com/nest/nest-simulator

extra:
  recipe-maintainers:
    - steffengraber
